<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wisdom.separate.dao.WisdomCardMapper" >
  <resultMap id="BaseResultMap" type="com.wisdom.separate.model.WisdomCard" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="identity_no" property="identityNo" jdbcType="VARCHAR" />
    <result column="card_no" property="cardNo" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="operator_id" property="operatorId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, age, sex, identity_no,card_no, mobile, address, status, operator_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from wisdom_card
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.wisdom.separate.model.WisdomCard" >
    insert into wisdom_card (id, name, age, 
      sex, identity_no,card_no, mobile, 
      address, status, 
      operator_id, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{sex,jdbcType=VARCHAR}, #{identityNo,jdbcType=VARCHAR},#{cardNo,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR},  #{status,jdbcType=VARCHAR}, 
      #{operatorId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wisdom.separate.model.WisdomCard" >
    insert into wisdom_card
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="identityNo != null" >
        identity_no,
      </if>
       <if test="cardNo != null" >
        card_no,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="identityNo != null" >
        #{identityNo,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wisdom.separate.model.WisdomCard" >
    update wisdom_card
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="identityNo != null" >
        identity_no = #{identityNo,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wisdom.separate.model.WisdomCard" >
    update wisdom_card
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=VARCHAR},
      identity_no = #{identityNo,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <!-- ******数据迁移调用*************************************************** -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from wisdom_card
		where id = #{id,jdbcType=BIGINT}
	</delete>

    <delete id="batchDeleteByDate" parameterType="java.util.Date">
        delete from wisdom_card
        where update_time &lt;= #{date,jdbcType=TIMESTAMP}
    </delete>

    <!--根据主键删除数据-->
    <delete id="batchDeleteByIdList">
        delete from wisdom_card
        <where>id in
            <foreach collection="idList" item="item" index="" open="(" close=")" separator=",">
                #{item,jdbcType=BIGINT}
            </foreach>
            AND update_time &lt;= #{date,jdbcType=TIMESTAMP}
        </where>
    </delete>

    <select id="searchMaxId" resultType="java.lang.Long">
        SELECT max(id)
        from wisdom_card
    </select>

    <select id="searchMinId" resultType="java.lang.Long">
        SELECT min(id)
        from wisdom_card
    </select>
  
  
  <!--根据主键排序、更新日期获取前N条数据-->
    <select id="getSyncDataByLimit" resultMap="BaseResultMap"
            parameterType="com.wisdom.separate.model.HistorydataSyncConfig">
        SELECT
        <include refid="Base_Column_List"></include>
        from wisdom_card 
        WHERE id>#{positionIndex,jdbcType=INTEGER} and update_time &lt;= #{updateTime,jdbcType=TIMESTAMP}
        order by id limit #{count,jdbcType=INTEGER}
    </select>

    <!--根据主键排序、更新日期，获取前N条需要删除的数据-->
    <select id="getDeleteDataByLimit" resultMap="BaseResultMap"
            parameterType="com.wisdom.separate.model.HistorydataDeleteConfig">
        SELECT
        <include refid="Base_Column_List"></include>
        from wisdom_card 
        WHERE id>#{positionIndex,jdbcType=INTEGER} and update_time &lt;= #{updateDateTime,jdbcType=TIMESTAMP}
        order by id limit #{count,jdbcType=INTEGER}
    </select>
    
  <!-- ********************************************************* -->
  
  <insert id="insertCardBatch" parameterType="java.util.List" >
    insert into wisdom_card (id, name, age, 
      sex, identity_no,card_no, mobile, 
      address,  status,
      operator_id, create_time, update_time
      )
    values 
     <foreach collection="cardList" item="obj" index="index" separator=",">
    		(#{obj.id,jdbcType=BIGINT}, #{obj.name,jdbcType=VARCHAR}, #{obj.age,jdbcType=INTEGER}, 
      	 #{obj.sex,jdbcType=VARCHAR}, #{obj.identityNo,jdbcType=VARCHAR},#{obj.cardNo,jdbcType=VARCHAR}, #{obj.mobile,jdbcType=VARCHAR}, 
	      #{obj.address,jdbcType=VARCHAR}, #{obj.status,jdbcType=VARCHAR}, 
	      #{obj.operatorId,jdbcType=BIGINT}, #{obj.createTime,jdbcType=TIMESTAMP}, #{obj.updateTime,jdbcType=TIMESTAMP}
     	 )
      </foreach>
  </insert>
  
  
  <!--根据主键排序、更新日期，获取前N条需要删除的数据-->
    <select id="selectCard" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"></include>
        from wisdom_card 
        limit #{page},#{size}
    </select>
  
</mapper>