<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
       http://www.springframework.org/schema/jee   
       http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
       http://www.springframework.org/schema/util
  	   http://www.springframework.org/schema/util/spring-util-4.0.xsd">
       
	<!-- <default-autowire="byName"> -->
	
	<!-- 开启暴露Aop代理到ThreadLocal支持  -->
	<aop:aspectj-autoproxy expose-proxy="true"/>
	
	<!-- 主数据源 -->
	<bean id="master" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
 		<property name="driverClassName" value="${spring.datasource.driverClass}"/>
 		<property name="url" value="${spring.datasource.url}"/>
		<property name="username" value="${spring.datasource.username}"/>
 		<property name="password" value="${spring.datasource.password}"/>
 		<property name="initialSize" value="1" />
 		<property name="minIdle" value="1" />
 		<property name="maxActive" value="50" />
 		<property name="maxWait" value="600"/>
 	</bean>

	<!-- 从数据源 -->
	<bean id="slave" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${spring.datasourceslave.driverClass}"/>
 		<property name="url" value="${spring.datasourceslave.url}"/>
		<property name="username" value="${spring.datasourceslave.username}"/>
 		<property name="password" value="${spring.datasourceslave.password}"/>
 		<property name="initialSize" value="1" />
 		<property name="minIdle" value="1" />
 		<property name="maxActive" value="50" />
 		<property name="maxWait" value="600"/>
	</bean>
	
	<!-- 历史数据源 -->
	<bean id="history" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${spring.datasourcehistory.driverClass}"/>
 		<property name="url" value="${spring.datasourcehistory.url}"/>
		<property name="username" value="${spring.datasourcehistory.username}"/>
 		<property name="password" value="${spring.datasourcehistory.password}"/>
 		<property name="initialSize" value="1" />
 		<property name="minIdle" value="1" />
 		<property name="maxActive" value="50" />
 		<property name="maxWait" value="600"/>
	</bean>

	<!--动态数据源-->
	<bean id="dynamicdataSource" class="com.wisdom.separate.service.MasterSlaveRoutingDataSource">
		<property name="targetDataSources">
			<map key-type="com.wisdom.separate.service.RoutingMasterSlave">
				<entry key="MASTER" value-ref="master"/>
				<entry key="SLAVE" value-ref="slave"/>
				<entry key="HISTORY" value-ref="history"/>
			</map>
		</property>
		<!-- 默认目标数据源为主库数据源 -->
		<property name="defaultTargetDataSource" ref="master"/>
	</bean>

	<!-- - - - - - - - sessionFactory -用自动配置类代替 - - - - - - -->
	<!-- MyBatis配置 
	<bean id="demoSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dynamicdataSource" />
-->
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 
		<property name="typeAliasesPackage" value="com.wisdom.pojo" />
		-->
		<!-- 显式指定Mapper文件位置,当Mapper文件跟对应的Mapper接口处于同一位置的时候可以不用指定该属性的值
		<property name="mapperLocations" value="classpath*:/mapper/**/*.xml" />
		 -->
		<!-- 用来指定Mybatis的Interceptor 
		<property name="plugins">
			<array>
				<bean class="com.wisdom.interceptors.SQLStatsPlugin"></bean>
			</array>
		</property>
	</bean>-->
	

</beans>